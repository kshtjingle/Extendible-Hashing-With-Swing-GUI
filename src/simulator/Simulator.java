/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulator;

import java.io.*;
import java.util.*;

/**
 *
 * @author Kshitij
 */
public class Simulator extends javax.swing.JFrame {

    /**
     * Creates new form Simulator
     */
    public Simulator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Extendible Hashing Simulator");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ENTER A KEY:");

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLabel3FocusGained(evt);
            }
        });
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CURRENT STRUCTURE");

        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel1);

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("LAST SEARCH RESULTS:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("CHANGES IN PREVIOUS STEP:");

        jPanel5.setBorder(new javax.swing.border.MatteBorder(null));

        jScrollPane1.setViewportView(jLabel5);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jScrollPane2.setViewportView(jLabel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );

        jButton4.setText("Back");
        jButton4.setActionCommand("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jButton4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(152, 152, 152))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10)))
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))
                                .addGap(72, 72, 72)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Input i = new Input();
        
        try {
    			
    			FileInputStream fi = new FileInputStream(new File("Inp.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			i = (Input) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
                
        Keys keys = new Keys();
            
            try {
    			
    			FileInputStream fi = new FileInputStream(new File("Keys.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			keys = (Keys) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
            
            /*Scanner in = new Scanner(System.in);
            
            String nextStep = in.nextLine();
            
            if(nextStep.equals("c")) {
            	
            	keys.clearKeysList();
            	
            }
            
            else {
            	
            	
            	
            }
            
            int input = in.nextInt();*/
            
            int input = Integer.parseInt(jTextField1.getText());
            
            keys.keyList.add(input);
            
            Directory d = new Directory(i.Bfr);
            
           /* try {
    			
    			FileInputStream fi = new FileInputStream(new File("Direc.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			d = (Directory) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}*/
            
            System.out.println(input);
            
            //in.close();
            
            for(Integer inp : keys.keyList) {
            
            	if(inp == input){
                    
                    System.out.println("LALALALALA");
            
            	IntegerHasher h = IntegerHasher.getInstance();
            
            	int hashValue = h.hash(inp);
            	String hashInBinary = String.format("%32s", 
					Integer.toBinaryString(hashValue));
			
            	System.out.println(String.format("Hashed %s to: %s", inp, hashInBinary));
                
                Label2 label2 = new Label2();
                
                try {
    			
    			FileInputStream fi = new FileInputStream(new File("Label2.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			label2 = (Label2) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
                
                label2.str += "<html>" + String.valueOf(inp) + " hashed to: " + String.valueOf(hashValue) + "<br/><br/>" + "BitPattern: " + hashInBinary + "<br/><br/>";
                
                try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Label2.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(label2);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
                
                d.insert(inp, 1);
                
                System.out.println("label2.str in Simulator = " + label2.str);
                
                try {
    			
    			FileInputStream fi = new FileInputStream(new File("Label2.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			label2 = (Label2) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
                
                System.out.println("label2.str in Simulator = " + label2.str);
                
                
                 try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Label2.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(label2);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
                
            	d.print();
                    
                }
                
                else{
                    
                    d.insert(inp, 0);
            
            	IntegerHasher h = IntegerHasher.getInstance();
            
            	int hashValue = h.hash(inp);
            	String hashInBinary = String.format("%32s", 
					Integer.toBinaryString(hashValue));
			
            	System.out.println(String.format("Hashed %s to: %s", inp, hashInBinary));
            
            	d.print();
                    
                }
            	
            }
            
            LabelString ls = new LabelString();
            
            try {
    			
    			FileInputStream fi = new FileInputStream(new File("LabelString.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			ls = (LabelString) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
            
            jLabel7.setText(ls.str);
            
            ls.str = "";
            
            try {
    			
    			FileOutputStream f = new FileOutputStream(new File("LabelString.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(ls);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
            
           /*try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Direc.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(d);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}*/
            
            try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Keys.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(keys);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
            
            Label2 label2 = new Label2();
            
            try {
    			
    			FileInputStream fi = new FileInputStream(new File("Label2.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			label2 = (Label2) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
            
            label2.str += "</html>";
            
            jLabel6.setText(label2.str);
            
            label2.str = "";
            
            try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Label2.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(label2);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
            
            jTextField1.setText("");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        Keys keys = new Keys();
        
        try {
    			
    			FileInputStream fi = new FileInputStream(new File("Keys.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			keys = (Keys) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
        
        keys.clearKeysList();
        
        try {
    			
    			FileOutputStream f = new FileOutputStream(new File("Keys.txt"));
    			ObjectOutputStream o = new ObjectOutputStream(f);
    		
    			o.writeObject(keys);
    		
    			o.close();
    			f.close();
    		
    		}
    	
    		catch(Exception e) {
    		
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    		
    		}
        
        jLabel7.setText("");
        
        jLabel6.setText("");
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel3FocusGained
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_jLabel3FocusGained

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        
        Input input = new Input();
        
        try {
    			
    			FileInputStream fi = new FileInputStream(new File("Inp.txt"));
    			ObjectInputStream oi = new ObjectInputStream(fi);
    			
    			input = (Input) oi.readObject();
    			
    			oi.close();
    			fi.close();
    			
    		}
    		
    		catch(Exception e) {
    			
    			//System.out.println(e.getStackTrace());
    			e.printStackTrace();
    			
    		}
        
        Integer bfr = input.Bfr;
        
        String str = "<html>Hash Function:<br/>h = k mod(37)<br/><br/>Global Depth: 1<br/><br/>Bfr: " + String.valueOf(input.Bfr) + "</html>";
        
        jLabel3.setText(str);
        
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        new Starter().setVisible(true);
         this.setVisible(false);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    public static boolean DEBUG = true;
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulator().setVisible(true);
                              
            }
        });
        
        //InputForm inputForm = new InputForm();
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
